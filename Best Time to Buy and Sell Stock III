#include<algorithm>
#include<cmath>
using namespace std;

class Solution {
public:
    int maxProfit(vector<int> &prices) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
            if (prices.size() == 0){
            return 0;
        }    
        
        vector<int > typeItrans(prices.size());
        vector<int > typeIItrans(prices.size());
        int temptrans = 0;
        int vmin = prices[0];
        int vmax = prices[prices.size()-1];
        int profit = 0;
        
        for (int i = 1; i<prices.size(); i++){
            temptrans = prices[i] - min(vmin, prices[i]);
            typeItrans[i] = max(typeItrans[i-1], temptrans);
            vmin = min(vmin, prices[i]);
        }
        
        
        for (int i = prices.size()-2; i>=0; i--){
            temptrans = max(vmax, prices[i])-prices[i];
            typeIItrans[i] = max(typeIItrans[i+1], temptrans);
            vmax =  max(vmax, prices[i]);
        }
        
        for (int i = 0; i<prices.size(); i++){
            profit = max(profit, typeItrans[i]+typeIItrans[i]);
        }
        
        return profit;
    }
};
